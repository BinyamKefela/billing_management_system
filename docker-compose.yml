services:
  web:
    build: .
    container_name: django_app_billing
    ports:
      - "8808:8000"
    volumes:
      - ./BillManagementSystem:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped
    env_file:
      - .env

  db:
    image: postgres:17
    container_name: postgres_db_billing
    volumes:
      - postgres_db:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  redis:
    image: redis:7
    container_name: redis_billing
    restart: unless-stopped

  celery_worker:
    build: .
    container_name: celery_worker_billing
    command: celery -A BillManagementSystem worker -l info
    volumes:
      - ./BillManagementSystem:/app
    depends_on:
      - redis
      - db
    env_file:
      - .env
    restart: unless-stopped

  celery_beat:
    build: .
    container_name: celery_beat_billing
    command: celery -A BillManagementSystem beat -l info
    volumes:
      - ./BillManagementSystem:/app
    depends_on:
      - redis
      - db
    env_file:
      - .env
    restart: unless-stopped

  flower:
    build: .
    container_name: flower_billing
    working_dir: /app
    command: celery -A BillManagementSystem flower --port=5555
    ports:
      - "5555:5555"
    volumes:
      - ./BillManagementSystem:/app
    depends_on:
      - redis
      - celery_worker
    env_file:
      - .env
    restart: unless-stopped

volumes:
  postgres_db:
